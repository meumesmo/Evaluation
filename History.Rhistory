TVERpooldfirst[,35:42] <- NULL
TVERpooldfirst$univ <- as.factor("TVER")
TVERpooldsec[,35:42] <- NULL
TVERpooldsec$univ <- as.factor("TVER")
DataRupold <- rbind(NNSUpoold[,8:35], KAIpooldfirst[,8:35], LETIpoold[,8:35], OMSUpoold[,8:35], TVERpooldfirst[,8:35], TVERpooldsec[,8:35])
DataRupold <- na.omit(DataRupold)
Questionspold <- DataRupold[,1:27]
Questionspold.PCA <- prcomp(Questionspold, center = TRUE, scale = TRUE)
gpold <- ggbiplot(Questions.PCA, obs.scale = 1, var.scale = 1,
groups = DataRupold$univ, ellipse = TRUE)
gpold <- gpold + scale_color_discrete(name = '')
gpold <- gpold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(gpold)
Questionspold <- DataRupold[,1:27]
Questionspold.PCA <- prcomp(Questionspold, center = TRUE, scale = TRUE)
gpold <- ggbiplot(Questionspold.PCA, obs.scale = 1, var.scale = 1,
groups = DataRupold$univ, ellipse = TRUE)
gpold <- gpold + scale_color_discrete(name = '')
gpold <- gpold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(gpold)
plot(DataKAI)
plot(DataKAI$pretest)
par(mfrow = c(1,1))
plot(DataKAI$pretest)
BSUpeold <- read.xlsx("EvaluationBSUPreOld.xlsx", sheetName = "Sheet1")
library(xlsx)
BSUpeold <- read.xlsx("EvaluationBSUPreOld.xlsx", sheetName = "Sheet1")
setwd("~/GitHub/Evaluation/CleanData")
BSUpeold <- read.xlsx("EvaluationBSUPreOld.xlsx", sheetName = "Sheet1")
View(BSUpeold)
BSUpoold <- read.xlsx("EvaluationBSUPosOld.xlsx", sheetName = "Sheet1")
BSUpemo <- read.xlsx("EvaluationBSUPreNew.xlsx", sheetName = "Sheet1")
BSUpomo <- read.xlsx("EvaluationBSUPosNew.xlsx", sheetName = "Sheet1")
GTUpomo <- read.xlsx("EvaluationGTU.xlsx", sheetName = "Sheet1")
View(PerData$university == "ATSU")
View(PerData)
UGpeold <- read.xlsx("EvaluationUG.xlsx", sheetName = "PreQOld")
UGpoold <- read.xlsx("EvaluationUG.xlsx", sheetName = "PosQOld")
UGpemo <- read.xlsx("EvaluationUG.xlsx", sheetName = "PreQModern")
UGpomo <- read.xlsx("EvaluationUG.xlsx", sheetName = "PosQModern")
PerData <- read.xlsx("PerformanceTest.xlsx", sheetName = "Sheet1")
PerData$diff <- PerData$postest - PerData$pretest
View(PerData)
PerData[,8:9]<-NULL
PerData <- na.omit(PerData)
DataGTU <- subset(PerData, university == "GTU")
describeBY(DataGTU$diff, DataGTU$treatment)
library(psych)
DataGTU <- subset(PerData, university == "GTU")
describeBY(DataGTU$diff, DataGTU$treatment)
DataGTU <- subset(PerData, university == "GTU")
describeBy(DataGTU$diff, DataGTU$treatment)
summary(DataGTU)
prebox <- ggplot(DataGTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataGTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataGTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
library(ggplot2)
library(gridExtra)
prebox <- ggplot(DataGTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataGTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataGTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
View(DataGTU)
describeBY(DataGTU$diff, DataGTU$treatment)
describeBy(DataGTU$diff, DataGTU$treatment)
prebox <- ggplot(DataGTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataGTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataGTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
DataGTU <- subset(PerData, university == "GTU")
describeBy(DataGTU$diff, DataGTU$treatment)
summary(DataGTU)
prebox <- ggplot(DataGTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataGTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataGTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
plot(DataGTU$pretest)
plot(DataGTU$pretest, type = boxplot())
boxplot(pretest~treatment, data = DataGTU)
class(DataGTU$pretest)
prebox <- ggplot(DataGTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataGTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataGTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
var.test(pretest ~ treatment, DataGTU)
t.test(diff ~ treatment, var.equal = FALSE, paired = FALSE, DataGTU) #as medias nao sao diferentes
ggplot(DataGTU, aes(x = pretest, y = postest, shape = treatment, color = treatment)) + geom_point() + geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
model1GTU <- lm(postest ~ pretest + treatment, DataGTU)
anova(model1GTU)
resultGTU <- aov(postest ~ pretest * treatment, data = DataGTU)
print(summary(resultGTU))
DataBTU <- subset(PerData, university == "BTU")
describeBy(DataBTU$diff, DataBTU$treatment)
summary(DataBTU)
prebox <- ggplot(DataBTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataBTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataBTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
#F-test BTU
var.test(pretest ~ treatment, DataBTU) #as variancias nao sao iguais
DataBTU <- subset(PerData, university == "BTU")
describeBy(DataBTU$diff, DataBTU$treatment)
DataBTU <- subset(PerData, university == "BSU")
describeBy(DataBTU$diff, DataBTU$treatment)
summary(DataBTU)
prebox <- ggplot(DataBTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataBTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataBTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
var.test(pretest ~ treatment, DataBTU) #as variancias nao sao iguais
t.test(diff ~ treatment, var.equal = TRUE, paired = FALSE, DataBTU) #as medias nao sao diferentes
ggplot(DataBTU, aes(x = pretest, y = postest, shape = treatment, color = treatment)) + geom_point() + geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
plot(DataBTU$postest ~ DataBTU$pretest)
describeBy(DataBTU$diff, DataBTU$treatment)
describeBy(DataBTU$pretest, DataBTU$treatment)
resultBTU <- aov(postest ~ pretest * treatment, data = DataBTU)
print(summary(resultGTU))
print(summary(resultBTU))
DataBTU <- subset(PerData, university == "ATSU")
describeBy(DataBTU$pretest, DataBTU$treatment)
summary(DataBTU)
prebox <- ggplot(DataBTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataBTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataBTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
var.test(pretest ~ treatment, DataBTU) #as variancias sao iguais
t.test(diff ~ treatment, var.equal = FALSE, paired = FALSE, DataBTU) #as medias nao sao diferentes
ggplot(DataBTU, aes(x = pretest, y = postest, shape = treatment, color = treatment)) + geom_point() + geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
resultBTU <- aov(postest ~ pretest * treatment, data = DataBTU)
print(summary(resultBTU))
DataBTU <- subset(PerData, university == "UG")
describeBy(DataBTU$pretest, DataBTU$treatment)
summary(DataBTU)
prebox <- ggplot(DataBTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataBTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataBTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
var.test(pretest ~ treatment, DataBTU) #as variancias sao iguais
t.test(diff ~ treatment, var.equal = TRUE, paired = FALSE, DataBTU) #as medias nao sao diferentes
ggplot(DataBTU, aes(x = pretest, y = postest, shape = treatment, color = treatment)) + geom_point() + geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
resultBTU <- aov(postest ~ pretest * treatment, data = DataBTU)
print(summary(resultBTU))
View(BSUpemo)
dim(BSUpemo)
BSUpeold[,35:42] <- NULL
View(BSUpeold)
BSUpeold <- na.omit(BSUpeold)
View(BSUpeold)
BSUpeold$univ <- as.factor("BSU")
dim(BSUpoold)
View(BSUpoold)
BSUpoold <- na.omit(BSUpoold)
BSUpoold$univ <- as.factor("BSU")
dim(BSUpemo)
View(BSUpemo)
BSUpemo
BSUpemo[,35:42] <- NULL
BSUpemo <- na.omit(BSUpemo)
View(BSUpemo)
BSUpemo$univ <- as.factor("BSU")
dim(BSUpomo)
View(BSUpomo)
BSUpomo[,35:43] <- NULL
BSUpomo <- na.omit(BSUpomo)
BSUpomo$univ <- as.factor("BSU")
ATSUpemo <- read.xlsx("EvaluationATSU_pre.xlsx", sheetName = "Sheet1")
ATSUpomo <- read.xlsx("EvaluationATSU_pos.xlsx", sheetName = "Sheet1")
View(ATSUpemo)
dim(ATSUpemo)
ATSUpemo[, 35:42] <- NULL
ATSUpemo$univ <- as.factor("ATSU")
View(ATSUpomo)
View(ATSUpemo)
dim(ATSUpomo)
ATSUpomo[,35:42] <- NULL
View(ATSUpomo)
ATSUpomo$univ <- as.factor("ATSU")
dim(UGpemo)
UGpemo[, 35:42] <- NULL
UGpemo$univ <- as.factor("UG")
UGpeold[, 35:42] <- NULL
View(UGpemo)
View(UGpeold)
UGpomo[, 35:42] <- NULL
UGpomo$univ <- as.factor("UG")
UGpoold[, 35:42] <- NULL
UGpoold$univ <- as.factor("UG")
View(UGpoold)
GeoPeold <- rbind(BSUpeold[, 8:35], UGpeold[, 8:35])
View(UGpeold)
dim(UGpeold)
UGpeold$univ <- as.factor("UG")
dim(UGpeold)
GeoPeold <- rbind(BSUpeold[, 8:35], UGpeold[, 8:35])
View(GeoPeold)
dim(GeoPeold)
QGeoPeold <- GeoPeold[,1:27]
QGeoPeold <- GeoPeold[,1:27]
QGeoPeold.PCA <- prcomp(QGeoPeold, center = TRUE, scale = TRUE)
QGeoPeold.PCA <- prcomp(na.omit(QGeoPeold), center = TRUE, scale = TRUE)
plot(QGeoPeold.PCA)
gpeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
gpeold <- gpeold + scale_color_discrete(name = '')
gpeold <- gpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(gpeold)
gpeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = QGeoPeold$univ, ellipse = TRUE)
gpeold <- gpeold + scale_color_discrete(name = '')
gpeold <- gpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(gpeold)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
geopeold <- gpeold + scale_color_discrete(name = '')
geopeold <- gpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopeold)
library(ggbiplot)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
geopeold <- gpeold + scale_color_discrete(name = '')
geopeold <- gpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopeold)
View(GeoPeold)
QGeoPeold <- GeoPeold[,1:27]
QGeoPeold.PCA <- prcomp(na.omit(QGeoPeold), center = TRUE, scale = TRUE)
plot(QGeoPeold.PCA)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = na.omit(GeoPeold$univ), ellipse = TRUE)
QGeoPeold <- na.omit(GeoPeold[,1:27])
QGeoPeold.PCA <- prcomp(na.omit(QGeoPeold), center = TRUE, scale = TRUE)
plot(QGeoPeold.PCA)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = na.omit(GeoPeold$univ), ellipse = TRUE)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
dim(QGeoPeold)
dim(GeoPeold)
GeoPeold <- na.omit(GeoPeold)
dim(GeoPeold)
QGeoPeold <- GeoPeold[,1:27]
QGeoPeold.PCA <- prcomp(QGeoPeold, center = TRUE, scale = TRUE)
plot(QGeoPeold.PCA)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
geopeold <- gpeold + scale_color_discrete(name = '')
geopeold <- gpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopeold)
geopeold <- ggbiplot(QGeoPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPeold$univ, ellipse = TRUE)
geopeold <- geopeold + scale_color_discrete(name = '')
geopeold <- geopeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopeold)
dim(BSUpoold)
dim(UGpoold)
GeoPoold <- rbind(BSUpoold[, 8:35], UGpoold[,8:35])
View(GeoPoold)
GeoPoold <- na.omit(GeoPoold)
QGeoPoold <- GeoPoold[, 1:27]
QGeoPoold.PCA <- prcomp(QGeoPoold, center = TRUE, scale = TRUE)
plot(QGeoPoold.PCA)
geopoold <- ggbiplot(QGeoPoold.PCA, obs.scale = 1, var.scale = 1,
groups = GeoPoold$univ, ellipse = TRUE)
geopoold <- geopoold + scale_color_discrete(name = '')
geopoold <- geopoold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopoold)
GeoPemo <- rbind(BSUpemo[,8:35], UGpemo[,8:35], ATSUpemo[,8:35])
View(GeoPemo)
GeoPemo <- na.omit(GeoPemo)
QGeoPemo <- GeoPemo[, 1:27]
QGeoPemo.PCA <- prcomp(QGeoPemo.PCA, center = TRUE, scale = TRUE)
plot(QGeoPemo.PCA)
geopemo <- ggbiplot(QGeoPemo.PCA, obs.scale = 1, var.scale = 1, groups = GeoPemo$univ, ellipse = TRUE)
geopemo <- geopemo + scale_color_discrete(name = '')
geopemo <- geopemo + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopemo)
QGeoPemo <- GeoPemo[, 1:27]
QGeoPemo.PCA <- prcomp(QGeoPemo.PCA, center = TRUE, scale = TRUE)
QGeoPemo.PCA <- prcomp(QGeoPemo, center = TRUE, scale = TRUE)
plot(QGeoPemo.PCA)
geopemo <- ggbiplot(QGeoPemo.PCA, obs.scale = 1, var.scale = 1, groups = GeoPemo$univ, ellipse = TRUE)
geopemo <- geopemo + scale_color_discrete(name = '')
geopemo <- geopemo + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopemo)
GeoPomo <- rbind(BSUpomo[,8:35], UGpomo[,8:35], ATSUpomo[,8:35], GTUpomo[,8:35])
GeoPomo <- rbind(BSUpomo[,8:35], UGpomo[,8:35], ATSUpomo[,8:35], GTUpomo[,8:35])
View(GTUpomo)
GTUpomo[,35:42] <- NULL
GTUpomo$univ <- as.factor("GTU")
GeoPomo <- rbind(BSUpomo[,8:35], UGpomo[,8:35], ATSUpomo[,8:35], GTUpomo[,8:35])
View(GeoPomo)
GeoPomo <- na.omit(GeoPomo)
gpeold <- ggbiplot(QuestionsPeold.PCA, obs.scale = 1, var.scale = 1,
groups = DataRupre$univ, ellipse = TRUE)
QGeoPomo <- GeoPomo[, 1:27]
QGeoPomo.PCA <- prcomp(QGeoPomo, center = TRUE, scale = TRUE)
plot(QGeoPomo.PCA)
geopomo <- ggbiplot(QGeoPomo.PCA, obs.scale = 1, var.scale = 1, groups = GeoPomo$univ, ellipse = TRUE)
geopomo <- geopomo + scale_color_discrete(name = '')
geopomo <- geopomo + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopomo)
GePeoldFa <- GeoPeold
dim(GeoPeold)
for(col in 1:28){GePeoldFa[,col] <- factor(GePeoldFa[,col], levels = 1:6, ordered = TRUE)}
class(GePeoldFa$N1)
View(GePeoldFa)
GePeoldFa$univ <- GeoPeold$univ
reGePeold <- likert::likert(as.data.frame(GePeoldFa[,1:3]), grouping = GeoPeold$univ)
plot(reGePeold, ordered = FALSE)
reGePeold1 <- likert::likert(as.data.frame(GePeoldFa[,1:3]), grouping = GeoPeold$univ)
reGePeold2 <- likert::likert(as.data.frame(GePeoldFa[,4:6]), grouping = GeoPeold$univ)
plot(reGePeold1, type = "density")
plot(reGePeold, ordered = FALSE)
plot(reGePeold2)
reGePeold3 <- likert::likert(as.data.frame(GePeoldFa[,7:9]), grouping = GeoPeold$univ)
plot(reGePeold3)
GePooldFa <- GeoPoold
for(col in 1:28){GePooldFa[,col] <- factor(GePooldFa[,col], levels = 1:6), ordered = TRUE}
for(col in 1:28){GePooldFa[,col] <- factor(GePooldFa[,col], levels = 1:6, ordered = TRUE)}
GePooldFa$univ <- GeoPoold$univ
reGePoold1 <- likert::likert(as.data.frame(GePooldFa[,1:3], grouping = GeoPoold$univ))
plot(reGePoold1)
View(GePooldFa)
reGePoold1 <- likert::likert(as.data.frame(GePooldFa[,1:3]), grouping = GeoPoold$univ)
plot(reGePoold1)
plot(reGePeold, ordered = FALSE)
plot(reGePeold, ordered = FALSE, type = "density")
plot(reGePoold1, ordered = FALSE)
plot(reGePoold1, ordered = FALSE, type = "density")
GePemoFa <- GeoPemo
for(col in 1:28){GePemoFa[,col] <- factor(GePemoFa[,col], levels = 1:6, ordered = TRUE)}
GePemoFa$univ <- GeoPemo$univ
reGePemo1 <- likert::likert(as.data.frame(GePemoFa[,1:3]), grouping = GePemoFa$univ)
plot(reGePemo1)
plot(reGePemo1, type = "density")
GePomoFa <- GeoPomo
for(col in 1:28){GePomoFa[,col] <- factor(GePomoFa[,col], levels = 1:6, ordered = TRUE)}
GePomoFa$univ <- GeoPomo$univ
reGePomo1 <- likert::likert(as.data.frame(GePomoFa[,1:3]), grouping = GePomoFa$univ)
plot(reGePomo1)
plot(reGePomo1, type = "density")
describeBy(DataGTU, DataGTU$treatment)
describeBy(DataBTU, DataBTU$treatment)
describeBy(DataATSU, DataATSU$treatment)
DataBTU <- subset(PerData, university == "BSU")
describeBy(DataBTU, DataBTU$treatment)
ASPUpeold <- read.xlsx("EvaluationDataASPU_Armenia.xlsx", sheetName = "PreQOld")
ASPUpoold <- read.xlsx("EvaluationDataASPU_Armenia.xlsx", sheetName = "PostQOld")
ASPUpemo <- read.xlsx("EvaluationDataASPU_Armenia.xlsx", sheetName = "PreQModern")
ASPUpomo <- read.xlsx("EvaluationDataASPU_Armenia.xlsx", sheetName = "PostQModern")
View(ASPUpeold)
ASPUpeold[, 35:45] <- NULL
ASPUpemo[, 35:45] <- NULL
ASPUpoold[,35:45] <- NULL
ASPUpomo[,35:45] <- NULL
DataBTU <- subset(PerData, university == "ASPU")
describeBy(DataBTU, DataBTU$treatment)
summary(DataBTU)
prebox <- ggplot(DataBTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataBTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataBTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
var.test(pretest ~ treatment, DataBTU) #as variancias sao iguais
t.test(diff ~ treatment, var.equal = TRUE, paired = FALSE, DataBTU) #as medias nao sao diferentes
ggplot(DataBTU, aes(x = pretest, y = postest, shape = treatment, color = treatment)) + geom_point() + geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
resultBTU <- aov(postest ~ pretest * treatment, data = DataBTU)
print(summary(resultBTU))
DataBTU <- subset(PerData, university == "NPUA")
describeBy(DataBTU, DataBTU$treatment)
summary(DataBTU)
prebox <- ggplot(DataBTU, aes(x = treatment, y = pretest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Pre Test") + stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
postbox <- ggplot(DataBTU, aes(x = treatment, y = postest, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores Post Test")+ stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
meanbox <- ggplot(DataBTU, aes(x = treatment, y = diff, fill = treatment)) + geom_boxplot() + scale_x_discrete() + xlab("Treatment Group") + ylab("Scores diff") + stat_summary(fun.y = mean, geom="point",shape=5, size=4)
grid.arrange(prebox, postbox, meanbox, ncol = 3)
var.test(pretest ~ treatment, DataBTU) #as variancias sao iguais
t.test(diff ~ treatment, var.equal = TRUE, paired = FALSE, DataBTU) #as medias nao sao diferentes
ggplot(DataBTU, aes(x = pretest, y = postest, shape = treatment, color = treatment)) + geom_point() + geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
resultBTU <- aov(postest ~ pretest * treatment, data = DataBTU)
print(summary(resultBTU))
NPUApeoldfirst <- read.xlsx("EvaluationNPUAone.xlsx", sheetName = "PreQOld")
NPUApeoldfirst[,35:45] <- NULL
NPUApeoldfirst$univ <- as.factor("NPUA")
NPUApooldfirst <- read.xlsx("EvaluationNPUAone.xlsx", sheetName = "PostQOld")
NPUApooldfirst[,35:45] <- NULL
NPUApooldfirst$univ <- as.factor("NPUA")
NPUApemofirst <- read.xlsx("EvaluationNPUAone.xlsx", sheetName = "PreQModern")
NPUApemofirst[,35:45] <- NULL
NPUApemofirst$univ <- as.factor("NPUA")
NPUApomofirst <- read.xlsx("EvaluationNPUAone.xlsx", sheetName = "PostQModern")
NPUApomofirst[,35:45] <- NULL
NPUApomofirst$univ <- as.factor("NPUA")
NPUApeoldsec <- read.xlsx("EvaluationNPUAtwo.xlsx", sheetName = "PreQOld")
NPUApeoldsec[,35:45] <- NULL
NPUApeoldsec$univ <- as.factor("NPUA")
NPUApooldsec <- read.xlsx("EvaluationNPUAtwo.xlsx", sheetName = "PostQOld")
NPUApooldsec[,35:45] <- NULL
NPUApooldsec$univ <- as.factor("NPUA")
NPUApemosec <- read.xlsx("EvaluationNPUAtwo.xlsx", sheetName = "PreQModern")
NPUApemosec[,35:45] <- NULL
NPUApemosec$univ <- as.factor("NPUA")
NPUApomosec <- read.xlsx("EvaluationNPUAtwo.xlsx", sheetName = "PostQModern")
NPUApomosec[,35:45] <- NULL
NPUApomosec$univ <- as.factor("NPUA")
ASPUpeold$univ - as.factor("ASPU")
ASPUpoold$univ - as.factor("ASPU")
ASPUpemo$univ - as.factor("ASPU")
ASPUpomo$univ - as.factor("ASPU")
ASPUpeold$univ <- as.factor("ASPU")
library(dplyr)
ASPUpoold$univ <- as.factor("ASPU")
ASPUpemo$univ <- as.factor("ASPU")
ASPUpomo$univ <- as.factor("ASPU")
GeoPeold
GeArPeold <- rbind(GeoPeold, ASPUpeold[,8:35], NPUApeoldfirst[,8:35], NPUApeoldsec[,8:35])
View(ASPUpeold[,8:35])
ArPeold <- rbind(ASPUpeold[,8:35], NPUApeoldfirst[,8:35], NPUApeoldsec[,8:35])
View(NPUApeoldfirst)
colnames(NPUApeoldfirst$X21) <- "N21"
colnames(NPUApeoldfirst)[28] <- "N21"
colnames(NPUApeoldsec)[28] <- "N21"
> GeArPeold <- rbind(GeoPeold, ASPUpeold[,8:35], NPUApeoldfirst[,8:35], NPUApeoldsec[,8:35])
GeArPeold <- rbind(GeoPeold, ASPUpeold[,8:35], NPUApeoldfirst[,8:35], NPUApeoldsec[,8:35])
GeoPeold <- na.omit(GeoPeold)
View(GeoPeold)
View(GeArPeold)
GeArPeold <- na.omit(GeArPeold)
QGeArPeold <- GeArPeold[,1:27]
QGeArPeold.PCA <- prcomp(QGeoPeold.PCA, center = TRUE, scale = TRUE)
plot(QGeArPeold.PCA)
geopeold <- ggbiplot(QGeArPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPeold$univ, ellipse = TRUE)
geopeold <- geopeold + scale_color_discrete(name = '')
geopeold <- geopeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geopeold)
gearpeold <- ggbiplot(QGeArPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPeold$univ, ellipse = TRUE)
gearpeold <- gearpeold + scale_color_discrete(name = '')
gearpeold <- gearpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(gearpeold)
QGeArPeold <- GeArPeold[,1:27]
QGeArPeold.PCA <- prcomp(QGeoPeold.PCA, center = TRUE, scale = TRUE)
QGeArPeold <- GeArPeold[,1:27]
QGeArPeold.PCA <- prcomp(QGeArPeold.PCA, center = TRUE, scale = TRUE)
plot(QGeArPeold.PCA)
gearpeold <- ggbiplot(QGeArPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPeold$univ, ellipse = TRUE)
gearpeold <- gearpeold + scale_color_discrete(name = '')
gearpeold <- gearpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
QGeArPeold <- GeArPeold[,1:27]
QGeArPeold.PCA <- prcomp(QGeArPeold.PCA, center = TRUE, scale = TRUE)
QGeArPeold.PCA <- prcomp(QGeArPeold, center = TRUE, scale = TRUE)
plot(QGeArPeold.PCA)
gearpeold <- ggbiplot(QGeArPeold.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPeold$univ, ellipse = TRUE)
gearpeold <- gearpeold + scale_color_discrete(name = '')
gearpeold <- gearpeold + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(gearpeold)
View(ASPUpoold)
View(NPUApooldfirst)
GeArpoold <- rbind(GeoPoold, ASPUpoold[,8:35], NPUApooldfirst[,8:35], NPUApooldsec[,8:35])
GeArpoold <- na.omit(GeArpoold)
View(GeArpoold)
QGeArPoold <- GeArpoold[, 1:27]
QGeArPoold.PCA <- prcomp(QGeArPoold, center = TRUE, scale = TRUE)
geoarpoold <- ggbiplot(QGeArPoold.PCA, obs.scale = 1, var.scale = 1,
groups = GeArpoold$univ, ellipse = TRUE) + scale_color_discrete(name = '') + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geoarpoold)
GeArPemo <- rbind(GeoPemo, ASPUpemo[,8:35], NPUApemofirst[,8:35], NPUApemosec[,8:35])
GeArPemo <- na.omit(GeArPemo)
QGeArPemo <- GeArPemo[,1:27]
QGeArPemo.PCA <- prcomp(QGeArPemo, center = TRUE, scale = TRUE)
geoarpemo <- ggbiplot(QGeArPemo.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPemo$univ, ellipse = TRUE) + scale_color_discrete(name = '') + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geoarpemo)
GeArPomo <- rbind(GeoPomo, ASPUpomo[,8:35], NPUApomofirst[,8:35], NPUApomosec[,8:35])
GeArPomo <- na.omit(GeArPomo)
QGeArPomo <- GeArPomo[,1:27]
QGeArPemo.PCA <- prcomp(QGeArPomo, center = TRUE, scale = TRUE)
geoarpomo <- ggbiplot(QGeArPomo.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPomo$univ, ellipse = TRUE) + scale_color_discrete(name = '') + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geoarpomo)
QGeArPomo <- GeArPomo[,1:27]
QGeArPomo.PCA <- prcomp(QGeArPomo, center = TRUE, scale = TRUE)
geoarpomo <- ggbiplot(QGeArPomo.PCA, obs.scale = 1, var.scale = 1,
groups = GeArPomo$univ, ellipse = TRUE) + scale_color_discrete(name = '') + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(geoarpomo)
GeArPeoldFa <- GeArPeold
for(col i in 28){GeArPeoldFa[,col] <- factor(GeArPeoldFa[,col], levels = 1:6, ordered = TRUE)}
for(col in 1:28){GeArPeoldFa[,col] <- factor(GeArPeoldFa[,col], levels = 1:6, ordered = TRUE)}
savehistory("~/GitHub/Evaluation/History.Rhistory")
